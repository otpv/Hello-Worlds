our ($_class_cmeta, $m, $_m_buffer, $_interp);
BEGIN { 
local $_interp = Mason::Interp->current_load_interp;
$_interp->component_moose_class->import;
$_interp->component_import_class->import;
}
*m = \$Mason::Request::current_request;
*_m_buffer = \$Mason::Request::current_buffer;
sub _inner { inner() }
use Poet qw($conf $env :web);
method _set_class_cmeta ($interp) {
$_class_cmeta = $interp->component_class_meta_class->new(
'class' => CLASS,
'dir_path' => '/',
'interp' => $interp,
'is_top_level' => '1',
'object_file' => __FILE__,
'path' => '/Base.mc',
'source_file' => '/home/perl/Workspaces/softwares/Hello-Worlds/poet/hello/comps/Base.mc',
);
}
sub _unset_class_cmeta { undef $_class_cmeta }
sub _class_cmeta { $_class_cmeta }
#line 1 "/home/perl/Workspaces/softwares/Hello-Worlds/poet/hello/comps/Base.mc"

has 'title' => (default => 'My site');
method main  {

;return;
}
augment 'wrap' => sub {
my $self = shift;
#line 5 "/home/perl/Workspaces/softwares/Hello-Worlds/poet/hello/comps/Base.mc"
$$_m_buffer .= '
  <html>
    <head>
      <link rel="stylesheet" href="/static/css/style.css">
';
#line 9 "/home/perl/Workspaces/softwares/Hello-Worlds/poet/hello/comps/Base.mc"
$self->m->_apply_filters_to_output(  $self->Defer  , sub {
#line 9 "/home/perl/Workspaces/softwares/Hello-Worlds/poet/hello/comps/Base.mc"
$$_m_buffer .= '      <title>';
#line 9 "/home/perl/Workspaces/softwares/Hello-Worlds/poet/hello/comps/Base.mc"
for (scalar( $self->title )) { $$_m_buffer .= $_ if defined }
#line 9 "/home/perl/Workspaces/softwares/Hello-Worlds/poet/hello/comps/Base.mc"
$$_m_buffer .= '</title>
';

;return;
});
#line 9 "/home/perl/Workspaces/softwares/Hello-Worlds/poet/hello/comps/Base.mc"
$$_m_buffer .= '    </head>
    <body>
      ';
#line 11 "/home/perl/Workspaces/softwares/Hello-Worlds/poet/hello/comps/Base.mc"
for (scalar(inner())) { $$_m_buffer .= $_ if defined }
#line 11 "/home/perl/Workspaces/softwares/Hello-Worlds/poet/hello/comps/Base.mc"
$$_m_buffer .= '
    </body>
  </html>
';

;return;
};
